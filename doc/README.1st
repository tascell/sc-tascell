Readme file for the SC language system
==========================================================================

1. Directories
sc/
 bnf/  the syntax of the SC-0/1 language.
 doc/  documents (including this file)
 src/  source code of the SC language system.
   rule/     transformation rule-sets
   sample/   sample code of (extended) SC languages

2. System requirements
* Microsoft Windows (>= 2000) + Cygwin
* FreeBSD, Linux

2.2 Common Lisp system
* Allegro Common Lisp (>= version 7.x)
* GNU CLISP (>= version 2.xx)

3. How to set up the SC language system
3.0 Set up CtoSC Compiler (see "C2SC" in this directory).

3.1 Run Common Lisp in sc/src/
% cd sc/src
% alisp     # or "clisp"

3.2 Load "init.lsp":
> (load "init.lsp")

3.3 To translate an SC program into a C program, call the sc2c function. For example:
> (sc2c "sample/fib.sc")

NOTE: At this time, a directory named .sc-fasl is created in your $HOME directory and compiled lisp files are stored in this directory.

3.4 You can compile the resulting C program using a C compiler (e.g., gcc) and run it.
% cd sample
% gcc fib.c -o fib
% ./fib 30

3.5 If you would like to compile an SC file from shell command line directly:
3.5.1 Make a copy of bin/sc-setenv.sh
3.5.2 Modify the value of SC_PREFIX to your SC directory.
3.5.3 Execute "source <modified sc-setenv.sh>".
3.5.4 You can translate an SC program by "sc2c <sc-file> <options>"
      (<options> are defined in src/sc-cmdline.lsp. Details to be written.)
3.5.5 If necessary, copy the contents into a startup file of your login shell.
